#include "guicommunicator.h"

guicommunicator::guicommunicator()
{
    zmq_push = zsock_new_push ("inproc://example");
    zmq_pull = zsock_new_pull ("inproc://example");
}

guicommunicator::~guicommunicator(){
        zsock_destroy (&zmq_push);
        zsock_destroy (&zmq_pull);
}



void guicommunicator::createEvent(GUI_ELEMENT _element, GUI_VALUE_TYPE _type, std::string _value){
    std::string tmp = "_" + std::to_string(magic_enum::enum_name(_element), + "_" + std::to);
    //TODO PROTOBUF
    //SEND

}


//ADDING SOME VARIATIONS OF createEvent
void guicommunicator::createEvent(GUI_ELEMENT _element, GUI_VALUE_TYPE _type){
        guicommunicator::createEvent(_element,_type,(std::string)"");
}
#ifdef USES_QT 
void guicommunicator::createEvent(GUI_ELEMENT _element, GUI_VALUE_TYPE _type, QString _value){
    guicommunicator::createEvent(_element,_type,_value.toStdString());
}
#endif
